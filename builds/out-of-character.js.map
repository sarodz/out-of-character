{"version":3,"file":"out-of-character.js","sources":["../src/isEmoji.js","../src/match.js","../src/index.js","../src/index.js?commonjs-entry"],"sourcesContent":["'use strict'\n\nconst isVariationSelector = (num) => num >= 65024 && num <= 65039\nconst isHighSurrogate = (num) => num >= 55296 && num <= 56319\nconst isLowSurrogate = (num) => num >= 56320 && num <= 57343\n\n/**\n * @description Checks if the character at the given index in the text is an emoji.\n * @param {string} text - The text to check for emojis.\n * @param {number} i - The offset of the character to check.\n * @returns {boolean} True if the character is an emoji, false otherwise.\n */\nconst isEmoji = function (text, i) {\n  // Look at code before\n  if (text[i - 1]) {\n    const code = text.charCodeAt(i - 1)\n    if (isHighSurrogate(code) || isLowSurrogate(code) || isVariationSelector(code)) {\n      return true\n    }\n  }\n  // Look at code after\n  if (text[i + 1]) {\n    const code = text.charCodeAt(i + 1)\n    if (isHighSurrogate(code) || isLowSurrogate(code) || isVariationSelector(code)) {\n      return true\n    }\n  }\n\n  return false\n}\n\nmodule.exports = isEmoji","'use strict'\n\nconst data = require('../data/characters.json')\nconst isEmoji = require('./isEmoji')\n\n// For easier lookup\nconst byCode = data.reduce((h, obj) => {\n  h[obj.code] = obj\n  return h\n}, {})\n\n// Chars to create our regex with\nconst unicodePrefixRegex = /^U\\+/\nconst codes = data\n  .filter((obj) => obj.replaceWith !== undefined)\n  .map((obj) => {\n    // Convert \"U+XXXX\" to \"\\\\uXXXX\" for RegExp\n    return obj.code.replace(unicodePrefixRegex, '\\\\u')\n  })\nconst codeRegex = new RegExp(`(${codes.join('|')})`, 'g')\n\n/**\n * @description Finds all invisible characters in the given text.\n * @param {string} text - The text to search for invisible characters.\n * @returns {{name: string, code: string, offset: number, replacement: string}[]} An array\n * of objects representing the found invisible characters.\n */\nconst findAll = function (text) {\n  const matches = []\n\n  for (const match of text.matchAll(codeRegex)) {\n    const char = match[0]\n    const offset = match.index\n\n    // Find the code details of the matched character\n    const codePoint = char.codePointAt(0) // Use codePointAt for full Unicode support\n    const hex = 'U+' + codePoint.toString(16).toUpperCase().padStart(4, '0')\n\n    const found = byCode[hex] // Lookup using the canonical 'U+XXXX' format\n    if (found) {\n      // Don't report U+200D (Zero Width Joiner) if it's part of an emoji sequence\n      if (found.code === 'U+200D' && isEmoji(text, offset)) {\n        continue\n      }\n\n      matches.push({\n        name: found.name,\n        code: found.code,\n        offset: offset,\n        replacement: found.replaceWith || '',\n      })\n    }\n  }\n  return matches\n}\n\nmodule.exports = findAll","'use strict'\n\nconst findAll = require('./match')\n\nmodule.exports = {\n  /**\n   * @description Detects hidden characters in the given text.\n   * @param {string} text - The text to search for hidden characters.\n   * @returns {{name: string, code: string, offset: number, replacement: string}[]|null} An array\n   * of objects representing the found hidden characters, or null if none are found.\n   */\n  detect: (text) => {\n    const matches = findAll(text)\n    if (matches.length > 0) {\n      return matches\n    }\n    return null\n  },\n  /**\n   * @description Remove invisible or strange unicode characters from the text.\n   * @param {string} text - The text to search.\n   * @returns {string} The text with invisible characters removed.\n   */\n  replace: (text) => {\n    const matches = findAll(text)\n\n    // Early return if no matches\n    if (matches.length === 0) {\n      return text\n    }\n    \n    let result = ''\n    let lastIndex = 0\n\n    for (const match of matches) {\n      result += text.slice(lastIndex, match.offset)\n      result += match.replacement\n      lastIndex = match.offset + 1\n    }\n    result += text.slice(lastIndex)\n\n    return result\n  },\n}","import { getDefaultExportFromCjs } from \"\u0000commonjsHelpers.js\";\nimport { __require as requireSrc } from \"C:\\\\Users\\\\fraze\\\\Documents\\\\git-repos\\\\forks\\\\out-of-character\\\\src\\\\index.js\";\nvar srcExports = requireSrc();\nexport { srcExports as __moduleExports };\nexport default /*@__PURE__*/getDefaultExportFromCjs(srcExports);"],"names":["isVariationSelector","num","isHighSurrogate","isLowSurrogate","isEmoji","text","i","code","charCodeAt","isEmoji_1","data","require$$0","require$$1","byCode","reduce","h","obj","unicodePrefixRegex","codes","filter","replaceWith","undefined","map","replace","codeRegex","RegExp","concat","join","findAll","matches","_iterator","_createForOfIteratorHelper","matchAll","_step","s","n","done","match","value","char","offset","index","codePoint","codePointAt","hex","toString","toUpperCase","padStart","found","push","name","replacement","err","e","f","src","detect","length","result","lastIndex","slice","srcExports","requireSrc","getDefaultExportFromCjs"],"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"}